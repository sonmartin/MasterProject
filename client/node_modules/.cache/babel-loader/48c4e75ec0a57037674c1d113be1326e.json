{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { get } from 'mongoose';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [callback, setCallback] = useState(false);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      const getHistory = async () => {\n        const res = await axios.get('/user/history', {\n          headers: {\n            Authorization: token\n          }\n        });\n        setHistory(res.data);\n      };\n\n      getHistory();\n    }\n  }, [token, callback]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login to continue buying\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has been added to cart.\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    history: [history, setHistory],\n    callback: [callback, setCallback]\n  };\n}\n\n_s(UserAPI, \"caWUTz0hMTwtcjoYSenqwQnTJdY=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["E:/MasterProject/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","get","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","callback","setCallback","getUser","res","headers","Authorization","data","role","err","alert","response","msg","getHistory","addCart","product","check","every","item","_id","quantity","patch"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { get } from 'mongoose'\n\nfunction UserAPI(token) {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [cart, setCart] = useState([])\n    const [history, setHistory] = useState([])\n    const [callback, setCallback] = useState(false)\n\n    useEffect(() =>{\n        if(token){\n            const getUser = async () =>{\n                try {\n                    const res = await axios.get('/user/infor', {\n                        headers: {Authorization: token}\n                    })\n\n                    setIsLogged(true)\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n\n                    setCart(res.data.cart)\n\n                } catch (err) {\n                    alert(err.response.data.msg)\n                }\n            }\n\n            getUser()\n            \n        }\n    },[token])\n\n    useEffect(() =>{\n        if(token) {\n            const getHistory = async() =>{\n                const res = await axios.get('/user/history', {\n                    headers: {Authorization: token}\n                })\n                setHistory(res.data)\n            }\n            getHistory()\n        }\n    },[token, callback])\n\n    const addCart = async (product) => {\n        if(!isLogged) return alert(\"Please login to continue buying\")\n\n        const check = cart.every(item =>{\n            return item._id !== product._id\n        })\n\n        if(check){\n            setCart([...cart, {...product, quantity: 1}])\n\n            await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]}, {\n                headers: {Authorization: token}\n            })\n\n        }else{\n            alert(\"This product has been added to cart.\")\n        }\n    }\n\n    return {\n        isLogged: [isLogged, setIsLogged],\n        isAdmin: [isAdmin, setIsAdmin],\n        cart: [cart, setCart],\n        addCart: addCart,\n        history: [history, setHistory],\n        callback: [callback, setCallback]\n    \n    }\n}\n\nexport default UserAPI\n "]},"metadata":{},"sourceType":"module"}